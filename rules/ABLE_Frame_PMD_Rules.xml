<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset name="ABLE_Frame_InspectionRules2_kor(20160501)" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>ABLE_Frame InspectionRule v2.0</description>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="NullPointerException을 throw하는 것은 비추천"
		name="AvoidThrowingNullPointerException" typeResolution="true">
		<description>
NullPointerException을 throw 하는 것은 비추천 - 대부분의 개발자들은 JVM이 Null Point Exception 을
throw 했을 때 헷갈리게 됨. IllegalArgumentException 대신 사용을 고려
      </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//AllocationExpression/ClassOrInterfaceType[@Image='NullPointerException']
          ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class Foo {
 void bar() {
  throw new NullPointerException();
 }
}
      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="가공되지 않은 Exception을 throw하는 것은 비추천"
		name="AvoidThrowingRawExceptionTypes" typeResolution="true">
		<description>
가공되지 않은 Exception을 throw하는 것은 비추천.  Rather than throw a raw RuntimeException, Throwable,
 Exception, or Error, use a subclassed exception or error instead.
    </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//AllocationExpression
 /ClassOrInterfaceType[
     @Image='Throwable' or
     @Image='Exception' or
     @Image='Error' or
     @Image='RuntimeException']

        ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class Foo {
public void bar() throws Exception {
  throw new Exception();
 }
}
    ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Null 값과 비교하기 위해 equals 함수를 사용하였음."
		name="EqualsNull" typeResolution="true">
		<description>
       값 비교 함수인 equals()을 사용하여 null을 비교, Reference 비교를 통한 null 비교를 수행한다.
        </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//PrimaryExpression
[PrimaryPrefix/Name[ends-with(@Image, 'equals')]
  or
 PrimarySuffix[ends-with(@Image, 'equals')]]
[PrimarySuffix/Arguments/ArgumentList[count(Expression)=1]
 /Expression/PrimaryExpression/PrimaryPrefix/Literal/NullLiteral]
                ]]></value>
			</property>
		</properties>
		<example><![CDATA[
class Bar {
   void foo() {
       String x = "foo";
       if (x.equals(null)) { // bad!
        doSomething();
       }
   }
}
        ]]></example>
	</rule>

	<rule
		class="net.sourceforge.pmd.lang.java.rule.naming.VariableNamingConventionsRule"
		dfa="false" externalInfoUrl="" message="''{0}'' 의 변수 ''{1}'' 이  ''{2}''  로 시작함"
		name="VariableNamingConventions" typeResolution="true">
		<description>
      잘못된 변수명 사용(변수명은 카멜 표기법을 사용해야 함, 변수명 내의 축약어는 대문자 표현, Static final 변수는 대문자로 표현)
        </description>
		<priority>1</priority>
		<properties>
			<property name="staticPrefix" value="" />
			<property name="staticSuffix" value="" />
			<property name="memberPrefix" value="" />
			<property name="memberSuffix" value="" />
		</properties>
		<example><![CDATA[
public class Foo {
 public static final int MY_NUM = 0;
 public String myTest = "";
 DataModule dmTest = new DataModule();
}
        ]]></example>
	</rule>

	<rule
		class="net.sourceforge.pmd.lang.java.rule.design.AvoidReassigningParametersRule"
		dfa="false" externalInfoUrl="" message="''{0}'' 처럼 파라미터 값을 직접 변경하지 말것"
		name="AvoidReassigningParameters" typeResolution="true">
		<description>
넘겨 받은 파라미터 값을 직접 변경하지 말것 , 로컬 변수를 대신 사용 권장.
    </description>
		<priority>2</priority>
		<example><![CDATA[
public class Foo {
 private void foo(String bar) {
  bar = "something else";
 }
}
    ]]></example>
	</rule>

	<rule
		class="net.sourceforge.pmd.lang.java.rule.strings.StringInstantiationRule"
		dfa="false" externalInfoUrl="" message="불필요한 Instance가 생성되어 있음" name="StringInstantiation"
		typeResolution="true">
		<description>
String 객체를 생성을 피하라; 불필요한 Instance가 생성되어 있음
    </description>
		<priority>1</priority>
		<example><![CDATA[
public class Foo {
 private String bar = new String("bar"); // just do a String bar = "bar";
}
    ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="Abstract Class내에  Abstract Method가 존재하지 않음" name="AbstractClassWithoutAbstractMethod"
		typeResolution="true">
		<description>
Abstract Class내에  Abstract Method가 존재하지 않음. Abstract 클래스는 구현이 완성 되지 않은 상태.
이것은 상속 받을 class가 abstract methods를 구현 함으로서 완성 되어짐.
      </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration
[@Abstract='true'
  and
  count( .//MethodDeclaration[@Abstract='true'] )=0 ]
[count(ImplementsList)=0]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public abstract class Foo {
 public void method1() { ... }
 public void method2() { ... }
 // consider using abstract methods or removing
 // the abstract modifier and adding protected constructors
}
      ]]></example>
	</rule>

	<rule name="AssignmentInOperand" since="1.03"
		message="피연산자내에 할당문이 사용됨.Code 를 복잡하고 가독성이 떨어지게 만듬"
		class="net.sourceforge.pmd.lang.java.rule.controversial.AssignmentInOperandRule"
		externalInfoUrl="">
		<description>
조건문의 조건 연산 내에 할당문 사용을 피하라;Code 를 복잡하고 가독성이 떨어지게 만듬
  </description>
		<priority>3</priority>
		<example>
  <![CDATA[
public void bar() {
    int x = 2;
    if ((x = getX()) == 3) {
      System.out.println("3!");
    }
}
  ]]>
  </example>
	</rule>

	<rule
		class="net.sourceforge.pmd.lang.java.rule.design.AssignmentToNonFinalStaticRule"
		externalInfoUrl="" message="Static 필드의 안전하지 않은 사용 가능성" name="AssignmentToNonFinalStatic">
		<description>
static 필드의 안전하지 않은 사용 가능성
       </description>
		<priority>1</priority>
		<example><![CDATA[

public class StaticField {
   static int x;
   public void FinalFields(int y) {
    x = y; // unsafe
   }
}

       ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="배열의 값을 루프문을 이용하여 복사하는 것 보다 System.arraycopy() 메소드를 이용하여 복사하는 것이 효율적이며 수행 속도가 빠름"
		name="AvoidArrayLoops" typeResolution="true">
		<description>
두개의 Array 사이의 Copy를 위해 루프문을 이용 하는 대신에 System.arrayCopy method 사용을 권장
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//Statement[(ForStatement or WhileStatement) and
count(*//AssignmentOperator[@Image = '='])=1
and
*/Statement
[
./Block/BlockStatement/Statement/StatementExpression/PrimaryExpression
/PrimaryPrefix/Name/../../PrimarySuffix/Expression
[(PrimaryExpression or AdditiveExpression) and count
(.//PrimaryPrefix/Name)=1]//PrimaryPrefix/Name/@Image
and
./Block/BlockStatement/Statement/StatementExpression/Expression/PrimaryExpression
/PrimaryPrefix/Name/../../PrimarySuffix[count
(..//PrimarySuffix)=1]/Expression[(PrimaryExpression
or AdditiveExpression) and count(.//PrimaryPrefix/Name)=1]
//PrimaryPrefix/Name/@Image
]]

        ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Test {
 public void bar() {
  int[] a = new int[10];
  int[] b = new int[10];
  for (int i=0;i<10;i++) {
   b[i]=a[i];
  }
 }
}
            // this will trigger the rule
            for (int i=0;i<10;i++) {
             b[i]=a[c[i]];
            }

        }
    }

      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="Interface는 클래스의 behavior 을 구현하는 데에만 사용해야 함. " name="AvoidConstantsInterface"
		typeResolution="true">
		<description>&#13;
interface는 클래스의 Model로써만 사용 되야한다. Constants를 interface에 사용하는 것은 잘못된 사용이다.
      </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

    //ClassOrInterfaceDeclaration[@Interface="true"]
    [
     count(//MethodDeclaration)=0
     and
     count(//FieldDeclaration)>0
    ]

        ]]></value>
			</property>
		</properties>
		<example><![CDATA[

    public interface ConstantsInterface {
     public static final int CONSTANT1=0;
     public static final String CONSTANT2="1";
    }

      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="Method 레벨의 synchronization 보다 block 레벨 synchronization 을 사용하는 것이 바람직함"
		name="AvoidSynchronizedAtMethodLevel" typeResolution="true">
		<description>&#13;
		Method 레벨의 synchronization 보다 block 레벨 synchronization 을 사용하는 것이 바람직함
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//MethodDeclaration[@Synchronized='true']

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 // Try to avoid this
 synchronized void foo() {
 }
 // Prefer this:
 void bar() {
  synchronized(this) {
  }
 }
}

      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		externalInfoUrl="" message="내용이 없는 Catch Block이 존재" name="EmptyCatchBlock">
		<description>&#13;
	내용이 없는 빈 catch block 사용을 하지 않는다.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//CatchStatement
 [count(Block/BlockStatement) = 0 and ($allowCommentedBlocks != 'true' or Block/@containsComment = 'false')]
 [FormalParameter/Type/ReferenceType
   /ClassOrInterfaceType[@Image != 'InterruptedException' and @Image != 'CloneNotSupportedException']
 ]

             ]]></value>
			</property>
			<property name="allowCommentedBlocks" type="Boolean"
				description="Empty blocks containing comments will be skipped"
				value="false" />
			<!-- <property name="allowCommentedBlocks" value="false"/> -->
		</properties>
		<example><![CDATA[

public void doSomething() {
  try {
    FileInputStream fis = new FileInputStream("/tmp/bugger");
  } catch (IOException ioe) {
      // not good
  }
}

      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Finally block이 비어있음" name="EmptyFinallyBlock"
		typeResolution="true">
		<description>
빈 finally 블록은 삭제해야 한다.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//FinallyStatement[count(Block/BlockStatement) = 0]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 public void bar() {
  try {
    int x=2;
   } finally {
    // empty!
   }
 }
}

      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="빈 if 구문의 사용을 피하도록 함" name="EmptyIfStmt"
		typeResolution="true">
		<description>
빈 if 구문의 사용을 피함
    </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//IfStatement/Statement
 [EmptyStatement or Block[count(*) = 0]]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 void bar(int x) {
  if (x == 0) {
   // empty!
  }
 }
}

       ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="필요없는 문장 (;)이 있음" name="EmptyStatementNotInLoop"
		typeResolution="true">
		<description>
불필요한 세미콜론 사용, 불필요한 문장 종결 문자 사용
       </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//Statement/EmptyStatement
 [not(
       ../../../ForStatement
       or ../../../WhileStatement
       or ../../../BlockStatement/ClassOrInterfaceDeclaration
       or ../../../../../../ForStatement/Statement[1]
        /Block[1]/BlockStatement[1]/Statement/EmptyStatement
       or ../../../../../../WhileStatement/Statement[1]
        /Block[1]/BlockStatement[1]/Statement/EmptyStatement)
 ]

                ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class MyClass {
   public void doit() {
      // this is probably not what you meant to do
      ;
      // the extra semicolon here this is not necessary
      System.out.println("look at the extra semicolon");;
   }
}

       ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="내용이 없는   try 블록이 존재함" name="EmptyTryBlock"
		typeResolution="true">
		<description>
		빈 try문이 사용
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//TryStatement/Block[1][count(*) = 0]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 public void bar() {
  try {
  } catch (Exception e) {
    e.printStackTrace();
  }
 }
}

      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="빈 While 구문이 사용되었음. " name="EmptyWhileStmt"
		typeResolution="true">
		<description>
		빈 while문 사용
       </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//WhileStatement/Statement[./Block[count(*) = 0]  or ./EmptyStatement]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 void bar(int a, int b) {
  while (a == b) {
   // empty!
  }
 }
}

       ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="Final field를 Static 으로 변경하면 overhead 를 줄일 수 있음." name="FinalFieldCouldBeStatic"
		typeResolution="true">
		<description>
final field가 compile-time 정수로  할당되어 진다면  Static으로 변경 하여 overhead 를 줄일 수 있음.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//FieldDeclaration
 [@Final='true' and @Static='false']
 [not (../../../../ClassOrInterfaceDeclaration[@Interface='true'])]
   /VariableDeclarator/VariableInitializer/Expression
    /PrimaryExpression/PrimaryPrefix/Literal

                ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 public final int BAR = 42; // this could be static and save some space
}

      ]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.java.rule.design.ImmutableFieldRule"
		dfa="false" externalInfoUrl=""
		message="생성자에서 Assign된 변수 ''{0}'' 를 Final로 선언하지 않았음" name="ImmutableField"
		typeResolution="true">
		<description>
생성자에서 assing 된 변수를 final 선언하지 않음
Final 선언으로 상수화 시킴
      </description>
		<priority>1</priority>
		<example><![CDATA[

public class Foo {
  private int x; // could be final
  public Foo() {
      x = 7;
  }
  public void foo() {
     int a = x + 2;
  }
}

      ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.imports.ImportFromSamePackageRule"
		dfa="false" externalInfoUrl="" message="동일 패키지에 있을 때는 import문을 사용할 필요가 없음"
		name="ImportFromSamePackage" typeResolution="true">
		<description>
동일 패키지에 있을 때는 import문을 사용할 필요가 없음
     </description>
		<priority>1</priority>
		<example><![CDATA[

 package foo;
 import foo.Buz; // no need for this
 import foo.*; // or this
 public class Bar{}

     ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.strings.InefficientEmptyStringCheckRule"
		dfa="false" externalInfoUrl=""
		message="Empty String 을 체크하기 위해 String.trim().length() 을 사용하는 것은 피하도록 함"
		name="InefficientEmptyStringCheck" typeResolution="true">
		<description>
Empty String 을 체크하기 위해 String.trim().length() 을 사용하는 것은 피하도록 함
Empty를 체크하기 위해서는 size 체크나 isWhitespace()를 결합하여 사용한다.
    </description>
		<priority>1</priority>
		<example><![CDATA[

public class Foo {
    void bar(String string) {
        if (string != null && string.trim().length() > 0) {
		    doSomething();
        }
    }
}

    ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.strings.InefficientStringBufferingRule"
		dfa="false" externalInfoUrl=""
		message="StringBuffer 함수에서 nonliteral 을 직접 concatenate 하지 말 것" name="InefficientStringBuffering"
		typeResolution="true">
		<description>
StringBuffer 함수에서 생성자나 append()안에서 nonliteral 을 직접 concatenate 하지 말 것
    </description>
		<priority>2</priority>
		<example><![CDATA[

public class Foo {
 void bar() {
  // Avoid this
  StringBuffer sb=new StringBuffer("tmp = "+System.getProperty("java.io.tmpdir"));
  // use instead something like this
  StringBuffer sb = new StringBuffer("tmp = ");
  sb.append(System.getProperty("java.io.tmpdir"));
 }
}

    ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Non-field 이름이 m_ 으로 시작함."
		name="MisleadingVariableName" typeResolution="true">
		<description>
		Non-field 이름이 m_ 으로 시작함.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//VariableDeclaratorId
[starts-with(@Image, 'm_')]
[not (../../../FieldDeclaration)]

                ]]></value>
			</property>
		</properties>
		<example><![CDATA[

  public class Foo {
    private int m_foo; // OK
    public void bar(String m_baz) {  // Bad
      int m_boz = 42; // Bad
    }
  }

      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="SimpleDateFormat 인스턴스를 생성할때 Locale 을 지정하는 것이 바람직함" name="SimpleDateFormatNeedsLocale"
		typeResolution="true">
		<description>
SimpleDateFormat 인스턴스를 생성할때 Locale 을 지정하는 것이 바람직함
        </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//AllocationExpression
 [ClassOrInterfaceType[@Image='SimpleDateFormat']]
 [Arguments[@ArgumentCount=1]]

                    ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 // Should specify Locale.US (or whatever)
 private SimpleDateFormat sdf = new SimpleDateFormat("pattern");
}

        ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="boolean 사용 시 불필요한 비교 연산을 피하도록 함"
		name="SimplifyBooleanExpressions" typeResolution="true">
		<description>
boolean 사용 시 불필요한 비교 연산을 피하도록 함
      </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//EqualityExpression/PrimaryExpression
 /PrimaryPrefix/Literal/BooleanLiteral

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Bar {
 // can be simplified to
 // bar = isFoo();
 private boolean bar = (isFoo() == true);

 public isFoo() { return false;}
}

      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.java.rule.strings.StringToStringRule"
		dfa="false" externalInfoUrl="" message="String 객체에서 toString()함수를 사용하는 것은 불필요함"
		name="StringToString" typeResolution="true">
		<description>
String Ojbect에서 toString() 사용 것은 비추천; 불필요한 작업
    </description>
		<priority>1</priority>
		<example><![CDATA[

public class Foo {
 private String baz() {
  String bar = "howdy";
  return bar.toString();
 }
}

    ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Switch구문에는 반드시 default label이 있어야 함"
		name="SwitchStmtsShouldHaveDefault" typeResolution="true">
		<description>
Switch구문에는 반드시 default label이 있어야 함
    </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//SwitchStatement[not(SwitchLabel[@Default='true'])]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public class Foo {
 public void bar() {
  int x = 2;
  switch (x) {
   case 2: int j = 8;
  }
 }
}

    ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.unnecessary.UnnecessaryConversionTemporaryRule"
		dfa="false" externalInfoUrl=""
		message="기본 데이터(primitive type)를 String으로 변환할 때 불필요한 임시 변환 작업을 피하도록 함"
		name="UnnecessaryConversionTemporary" typeResolution="true">
		<description>
기본 데이터(primitive type)를 String으로 변환할 때 불필요한 임시 변환 작업을 피하도록 함
      </description>
		<priority>1</priority>
		<example><![CDATA[

public String convert(int x) {
  // this wastes an object
  String foo = new Integer(x).toString();
  // this is better
  return Integer.toString(x);
}

      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="괄호가 없어도 되는 상황에서 불필요한 괄호를 사용할 경우 마치 메소드 호출처럼 보여서 소스 코드의 가독성을 떨어뜨릴 수 있음."
		name="UnnecessaryParentheses" typeResolution="true">
		<description>
괄호가 없어도 되는 상황에서 불필요한 괄호를 사용할 경우 마치 메소드 호출처럼 보여서 소스 코드의 가독성을 떨어뜨릴 수 있음.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ReturnStatement/Expression/PrimaryExpression/PrimaryPrefix/Expression[count(*)=1]/PrimaryExpression/PrimaryPrefix
            ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class Foo {
  boolean bar() {
      return (true);
  }
}
      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="불필요한 Wrapper Object conversion Method가 생성되었음." name="UnnecessaryWrapperObjectCreation"
		typeResolution="true">
		<description>
불필요한 Wrapper 클래스의 conversion Method를 사용 함
      </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//PrimaryExpression[
    PrimaryPrefix/Name[
    @Image='Byte.valueOf' or
    @Image='Short.valueOf' or
    @Image='Integer.valueOf' or
    @Image='Long.valueOf' or
    @Image='Float.valueOf' or
    @Image='Double.valueOf' or
    @Image='Boolean.valueOf' or
    @Image='Character.valueOf'
    ]
    and
    PrimarySuffix[
    @Image='byteValue' or
    @Image='shortValue' or
    @Image='intValue' or
    @Image='longValue' or
    @Image='floatValue' or
    @Image='doubleValue' or
    @Image='booleanValue' or
    @Image='charValue'
]]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[

public int convert(String s) {
  int i, i2;

  i = Integer.valueOf(s).intValue(); // this wastes an object
  i = Integer.parseInt(s); // this is better

  i2 = Integer.valueOf(i).intValue(); // this wastes an object
  i2 = i; // this is better

  return i2;
}

          ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.unusedcode.UnusedFormalParameterRule"
		dfa="false" externalInfoUrl="" message="''{1}'' 처럼  사용되지 않는  ''{0}'' 파라미터가 있음"
		name="UnusedFormalParameter" typeResolution="true">
		<description>
		사용되지 않는 파라미터가 있음
    </description>
		<priority>2</priority>
		<example><![CDATA[

public class Foo {
 private void bar(String howdy) {
  // howdy is not used
 }

    ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.unusedcode.UnusedPrivateFieldRule"
		dfa="false" externalInfoUrl="" message="사용되지 않는 Private field ''{0}'' 가 선언되었음"
		name="UnusedPrivateField" typeResolution="true">
		<description>
사용되지 않는 private 필드가 선언되어 있음
    </description>
		<priority>2</priority>
		<example><![CDATA[

public class Something {
  private static int FOO = 2; // Unused
  private int i = 5; // Unused
  private int j = 6;
  public int addOne() {
    return j++;
  }
}

    ]]></example>
	</rule>
	<rule
		class="net.sourceforge.pmd.lang.java.rule.unusedcode.UnusedPrivateMethodRule"
		dfa="false" externalInfoUrl="" message="사용되지 않는 Private Method ''{0}'' 가 선언되었음"
		name="UnusedPrivateMethod" typeResolution="true">
		<description>&#13;
사용되지 않는 private Method가 선언되어 있음
    </description>
		<priority>2</priority>
		<example><![CDATA[

public class Something {
 private void foo() {} // unused
}

    ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="String 을 append 할 경우, String.valueOf 함수를 사용할 필요 없음." name="UselessStringValueOf"
		typeResolution="true">
		<description>
불필요한 valueOf 메서드 사용. String을 append할 경우 String.valueOf 함수를 사용할 필요없음
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//AdditiveExpression[@Image='+']
[PrimaryExpression/PrimaryPrefix/Name[@Image='String.valueOf']]

              ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public String convert(int i) {
  String s;
  s = "a" + String.valueOf(i); // Bad
  s = "a" + i; // Better
  return s;
}
          ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="중괄호없이 사용된 while문의 사용은 피하라"
		name="WhileLoopsMustUseBraces" typeResolution="true">
		<description>
중괄호 없이 사용된 While 문. 소스코드가 복잡할 경우 코드의 구역을 제대로 구분하기 어렵기 때문에 한 줄 while문이라도 중괄호를 포함 시켜야 한다.
      </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//WhileStatement[not(Statement/Block)]
                ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public void doSomething() {
  while (true)
      x++;
}
      ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.java.rule.imports.DuplicateImportsRule"
		externalInfoUrl="" message="''{0}'' import문이 중복 선언 되었음" name="DuplicateImports">
		<description>&#13;
중복된 import 문 사용. 예를 들어, java.lang.*와 같이 전체 패키지를 import 한후java.lang.String과 같이 중복된 패키지를 import함
    </description>
		<priority>1</priority>
		<example><![CDATA[
import java.lang.String;
import java.lang.*;
public class Foo {}
    ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="http://pmd.sourceforge.net/rules/logging-java.html#SystemPrintln"
		message="System.out.print 가 사용됨." name="SystemPrintln" since="2.1"
		typeResolution="true">
		<description>
성능에 영향을 줄 수 있는 System.(out|err).priint의 사용은 하지 않는다.
     </description>
		<priority>1</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[

//Name[
    starts-with(@Image, 'System.out.print')
    or
    starts-with(@Image, 'System.err.print')
    ]

             ]]></value>
			</property>
		</properties>
		<example><![CDATA[
class Foo{
    Logger log = Logger.getLogger(Foo.class.getName());
    public void testA () {
        System.out.println("Entering test");
        // Better use this
        log.fine("Entering test");
    }
}
     ]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Controller Class 에서는 HController를 확장하지 않은경우" name="UnusedHController"
		typeResolution="true">
		<description>Controller Class 에서는 반드시 HController를 확장해서 사용해야함</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration[
  ends-with(@Image,'Controller')
  and
    (
      not
      (
       ./ExtendsList/ClassOrInterfaceType[@Image='HController']
      )
    )
]
        ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthController {
  public List selectAuths(Map searchMap) throws Exception {

        return select("authDAO.selectAuths", searchMap);

  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="ServiceImpl Class 에서 HService를 확장하지 않은경우" name="UnusedHService" typeResolution="true">
		<description>ServiceImpl Class 에서는 반드시 HService 를 확장해서 사용해야 한다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration[
  ends-with(@Image,'ServiceImpl')
  and
    (
      not
      (
       ./ExtendsList/ClassOrInterfaceType[@Image='HService']
      )
    )
]
    ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthServiceImpl {
  public List selectAuths(Map searchMap) throws Exception {

        return select("authDAO.selectAuths", searchMap);
  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl=""
		message="@RequestMapping *.do 의 * 부분이 함수명과 일치하지 않은 경우" name="NomatchDO"	typeResolution="true">
		<description>@RequestMapping 의 url 은 controller 의 함수명과 일치해야 함</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceBodyDeclaration
[
  ./Annotation/NormalAnnotation/Name/@Image='RequestMapping'
  and
  (
  not
    (
      ends-with(./Annotation/NormalAnnotation/MemberValuePairs/MemberValuePair/MemberValue/PrimaryExpression/PrimaryPrefix/Literal/@Image,
                 concat(./MethodDeclaration/MethodDeclarator/@Image,'.do"'))
    )
  )
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthController extends HController{

    @RequestMapping(value = "/auth/selectAuths.do")
    public String selectFoo(DataRequest reqData, DataResponse resData) throws Exception {
      return Constants.VIEW;
   }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="ServiceImpl 내에 다른 ServiceImpl 호출" name="CalledOtherServiceImpl" typeResolution="true">
		<description>ServiceImpl Class 내에서 ServiceImpl 를 호출해서는 안됨. Service interface를 호출해서 사용하세요</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ReferenceType/ClassOrInterfaceType[ends-with(@Image,'Impl')]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthServiceImpl {
 private Test1Impl test1Impl;
 public void selectTest(){
  Test2Impl test2Impl = new Test2Impl();
 }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="Log를 선언해서 사용함." name="LogDeclaration"
		typeResolution="true">
		<description>Log를 사용하실려면 HController, HService 의 Log 를 사용해주세요.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//Name[
    starts-with(@Image, 'Log')
    or
    starts-with(@Image, 'Logger')
    or
    starts-with(@Image, 'protected Log')
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
class Foo{
    protected Log log = LogFactory.getLog(getClass());

    public void testA () {
        Log log = LogFactory.getLog(getClass());
        // Better use this
        log.fine("Entering test");
    }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"	dfa="false" externalInfoUrl="" message="다른 Service 의 DAO 를 호출했음."
		name="CalledOtherDAO" typeResolution="true">
		<description>service impl 에서 dao 를 여러개 호출해서는 안됨(다른 이름의 dao 클래스 호출)</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//TypeDeclaration
  [count(//FieldDeclaration/Type/ReferenceType/ClassOrInterfaceType
  [ends-with(@Image,'DAO')])>1]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthServiceImpl {

 @Resource(name="testDAO")
 private TestDAO testDAO;

 @Resource(name="abcDAO")
 private AbcDAO abcDAO;
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="함수명은 select,insert,update,delete,multi 로만 사용해야한다." name="WrongFunctionName" 
		typeResolution="true">
		<description>함수명은 select, insert, update, delete, multi 가 아닌 다른 함수를 사용하는것은 표준이 아닙니다.&#13;
transaction 이 걸리지 않습니다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration
[
  (not (ends-with(@Image,'VO')))
 and
  (//MethodDeclarator
  [not(starts-with(@Image,'select')
       or
       starts-with(@Image,'update')
       or
       starts-with(@Image,'insert')
       or
       starts-with(@Image,'delete')
       or
       starts-with(@Image,'multi'))]
  )
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthServiceImpl {

 public void selectTest(){
  int a = 0;
 }

 public void updateTest(){
  int u = 0;
 }

 public void deleteTest(){
  int d = 0;
 }

 public void insertTest(){
  int i = 0;
 }

 public void multiTest(){
  int m = 0;
 }

 public void listTest(){
  int i=0;
 }
}

]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="log 사용시 isEnabled 사용해야함" name="UnusedIsEnabled"
		typeResolution="true">
		<description>log.debug 사용할때 if ( log.isDebugEnabled()) 사용해야함</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//Block/BlockStatement
[
  (./Statement/StatementExpression/PrimaryExpression/PrimaryPrefix/Name[
     starts-with(@Image, 'log.debug')
     or
     starts-with(@Image, 'log.info')
     or
     starts-with(@Image, 'log.error')
     or
     starts-with(@Image, 'log.fatal')
     or
     starts-with(@Image, 'log.trace')
     or
     starts-with(@Image, 'log.warn')
     ])
  and
  (not (./Statement[name(../../../..)='IfStatement']))
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class Auth{
  public List insertAuths(Map searchMap) throws Exception {

        log.debug("ddd");
        if(log.isDebugEnabled()){
          log.debug("ddd");
        }
  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="클래스명칭이 50자를 초과한 것" name="ExcessedClassName"	typeResolution="true">
		<description>클래스명은 최대 50자까지 입니다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration[string-length(@Image)  > 50]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthAbcdefghijklmnopqrstu1AuthAbcdefghijklmnopqrstu2{
  public List selectAuths(Map searchMap) throws Exception {

        return list("authDAO.selectAuths", searchMap);
  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="클래스명칭이 소문자로 시작된 것" name="NoCamelClassName" typeResolution="true">
		<description>클래스명은 반드시 대문자로 시작해야 한다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration
[ starts-with(@Image,'a') or starts-with(@Image,'b') or starts-with(@Image,'c')
  or starts-with(@Image,'d') or starts-with(@Image,'e') or starts-with(@Image,'f')
  or starts-with(@Image,'g') or starts-with(@Image,'h') or starts-with(@Image,'i')
  or starts-with(@Image,'j') or starts-with(@Image,'k') or starts-with(@Image,'l')
  or starts-with(@Image,'m') or starts-with(@Image,'n') or starts-with(@Image,'o')
  or starts-with(@Image,'p') or starts-with(@Image,'q') or starts-with(@Image,'r')
  or starts-with(@Image,'s') or starts-with(@Image,'t') or starts-with(@Image,'u')
  or starts-with(@Image,'v') or starts-with(@Image,'w') or starts-with(@Image,'x')
  or starts-with(@Image,'y') or starts-with(@Image,'z')
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class AuthServiceImpl   {

  public List selectAuths(Map searchMap) throws Exception {
        return authDAO.list("authDAO.selectAuths", searchMap);
  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="@Annotation 설정 시 value 로 대문자로 시작한 것" name="UsedUpperAnnotationValue" typeResolution="true">
		<description>Annotation 설정 시 name 에 대한 설정은 소문자로 시작해야한다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//Annotation//PrimaryPrefix/Literal
[
 (not (ends-with(@Image,'SqlMapClient"')))
 and
  (starts-with(@Image,'"A') or starts-with(@Image,'"B') or starts-with(@Image,'"C')
  or starts-with(@Image,'"D') or starts-with(@Image,'"E') or starts-with(@Image,'"F')
  or starts-with(@Image,'"G') or starts-with(@Image,'"H') or starts-with(@Image,'"I')
  or starts-with(@Image,'"J') or starts-with(@Image,'"K') or starts-with(@Image,'"L')
  or starts-with(@Image,'"M') or starts-with(@Image,'"N') or starts-with(@Image,'"O')
  or starts-with(@Image,'"P') or starts-with(@Image,'"Q') or starts-with(@Image,'"R')
  or starts-with(@Image,'"S') or starts-with(@Image,'"T') or starts-with(@Image,'"U')
  or starts-with(@Image,'"V') or starts-with(@Image,'"W') or starts-with(@Image,'"X')
  or starts-with(@Image,'"Y') or starts-with(@Image,'"Z'))
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
@Repository(name="AuthDAO")
@Service("AuthService")
@Resource(name="AuthDAO")
public class AuthController   {
  @RequestMapping(value = "")
  public void test(){
  }
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="DAO 클래스는 interface로 생성해야 한다."
		name="UsedInterfaceDAOLayer" typeResolution="true">
		<description>DAO 클래스는 interface로 생성해야 한다</description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
   //ClassOrInterfaceDeclaration[
      ends-with(@Image, 'DAO')
      and
      (@Interface="false")
]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public interface TestDAO {
 public void selectPerson() throws Exception;
}
]]></example>
	</rule>
	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="DAO 인터페이스에서 @Mapper 사용해야 합니다." name="UsedMapperAnnotationDAOLayer" typeResolution="true">
		<description>DAO 인터페이스에서는 @Mapper Annotation을 사용해야 한다.</description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//TypeDeclaration[
   ./ClassOrInterfaceDeclaration[ends-with(@Image, 'MDAO')]
   and
   (
    not
     (
      ./Annotation/SingleMemberAnnotation/Name/@Image='Mapper'
      or
      ./Annotation/MarkerAnnotation/Name/@Image='Mapper'
      or
      ./Annotation/NormalAnnotation/Name/@Image='Mapper'
    )
   )
  ]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public interface TestMDAO {
 public void selectPerson() throws Exception;
}
]]></example>
	</rule>

	<rule class="net.sourceforge.pmd.lang.rule.XPathRule" language="java"
		dfa="false" externalInfoUrl="" message="클래스 명칭의 접미어가 Controller,Service,ServiceImple,MDAO 가 아닌 클래스"
		name="WrongStandardPostFixClassName" typeResolution="true">
		<description>클래스 명은 반드시 Controller, Service, ServiceImpl, MDAO, VO 의 postfix 를 가져야 한다.</description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//ClassOrInterfaceDeclaration
[
  not
  (
  ends-with(@Image,'Controller')
  or
  ends-with(@Image,'Service')
  or
  ends-with(@Image,'ServiceImpl')
  or
  ends-with(@Image,'VO')
  or
  ends-with(@Image,'MDAO')
  )

]
]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class Auth{
  public List selectAuths(Map searchMap) throws Exception {
        return list("authDAO.selectAuths", searchMap);
  }
}
]]></example>
	</rule>
	<rule name="JumbledIncrementer" language="java" since="1.0"
		message="잘못된(혼동된) loop 증감자 사용" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="">
		<description>
잘못된(혼동된) loop 증감자 사용
     </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
 <![CDATA[
//ForStatement
 [
  ForUpdate/StatementExpressionList/StatementExpression/PostfixExpression/PrimaryExpression/PrimaryPrefix/Name/@Image
  =
  ancestor::ForStatement/ForInit//VariableDeclaratorId/@Image
 ]
 ]]>
             </value>
			</property>
		</properties>
		<example>
 <![CDATA[
public class JumbledIncrementerRule1 {
	public void foo() {
		for (int i = 0; i < 10; i++) {			// only references 'i'
			for (int k = 0; k < 20; i++) {		// references both 'i' and 'k'
				System.out.println("Hello");
			}
		}
	}
}
 ]]>
     </example>
	</rule>
	<rule name="ForLoopShouldBeWhileLoop" language="java" since="1.02"
		message="While Loop 형식의 For문사용" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="">
		<description>
While Loop 형식의 For문사용
      </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
                <![CDATA[
//ForStatement
 [count(*) > 1]
 [not(LocalVariableDeclaration)]
 [not(ForInit)]
 [not(ForUpdate)]
 [not(Type and Expression and Statement)]
 ]]>
            </value>
			</property>
		</properties>
		<example>
  <![CDATA[
public class Foo {
	void bar() {
		for (;true;) true; // No Init or Update part, may as well be: while (true)
	}
}
 ]]>
      </example>
	</rule>
	<rule name="DoubleCheckedLocking" language="java" since="1.04"
		message="Double Checked Locking 패턴에 의해 부분적으로 오브젝트가 생성됨"
		class="net.sourceforge.pmd.lang.java.rule.basic.DoubleCheckedLockingRule"
		externalInfoUrl="">
		<description>
Double Checked Locking 패턴에 의해 부분적으로 오브젝트가 생성됨
      </description>
		<priority>1</priority>
		<example>
  <![CDATA[
public class Foo {
	Object baz;
	Object bar() {
		if (baz == null) { // baz may be non-null yet not fully created
			synchronized(this) {
				if (baz == null) {
					baz = new Object();
        		}
      		}
    	}
		return baz;
	}
}
 ]]>
      </example>
	</rule>

	<rule name="ReturnFromFinallyBlock" language="java" since="1.05"
		message="finally 블록에서 return 수행" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="">
		<description>
finally 블록에서 return 수행
      </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//FinallyStatement//ReturnStatement
]]>
              </value>
			</property>
		</properties>
		<example>
  <![CDATA[
public class Bar {
	public String foo() {
		try {
			throw new Exception( "My Exception" );
		} catch (Exception e) {
			throw e;
		} finally {
			return "A. O. K."; // return not recommended here
		}
	}
}
]]>
      </example>
	</rule>

	<rule name="UnconditionalIfStatement" language="java" since="1.5"
		message="항상 true or false 조건절을 사용하지 말아라" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="">
		<description>
항상 true or false 조건절을 사용하지 말아라
      </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
 <![CDATA[
//IfStatement/Expression
 [count(PrimaryExpression)=1]
 /PrimaryExpression/PrimaryPrefix/Literal/BooleanLiteral
]]>
                </value>
			</property>
		</properties>
		<example>
  <![CDATA[
public class Foo {
	public void close() {
		if (true) {		// fixed conditional, not recommended
			// ...
		}
	}
}
]]>
      </example>
	</rule>
	<rule name="CollapsibleIfStatements" language="java" since="3.1"
		message="불필요한 IF문 사용, 통합적으로 사용 될수 있는 조건문을 따로 사용하여 코드 가독성 및 불필요한 로직이 수행 되게 함"
		class="net.sourceforge.pmd.lang.rule.XPathRule" externalInfoUrl="">
		<description>
불필요한 IF문 사용, 통합적으로 사용 될수 있는 조건문을 따로 사용하여 코드 가독성 및 불필요한 로직이 수행 되게 함
      </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
                <![CDATA[
//IfStatement[@Else='false']/Statement
 /IfStatement[@Else='false']
 |
//IfStatement[@Else='false']/Statement
 /Block[count(BlockStatement)=1]/BlockStatement
  /Statement/IfStatement[@Else='false']]]>
            </value>
			</property>
		</properties>
		<example>
  <![CDATA[
void bar() {
	if (x) {			// original implementation
		if (y) {
			// do stuff
		}
	}
}

void bar() {
	if (x && y) {		// optimized implementation
		// do stuff
	}
}
 ]]>
      </example>
	</rule>
	<rule name="AvoidMultipleUnaryOperators" since="4.2"
		class="net.sourceforge.pmd.lang.java.rule.basic.AvoidMultipleUnaryOperatorsRule"
		message="단항 연산자의 멀티 사용은 오류 가능성과 혼란을 이끄므로 사용을 지양해라" externalInfoUrl="">
		<description>
            <![CDATA[
단항 연산자의 멀티 사용은 오류 가능성과 혼란을 이끄므로 사용을 지양해라
            ]]>
        </description>
		<priority>2</priority>
		<example>
            <![CDATA[
// These are typo bugs, or at best needlessly complex and confusing:
int i = - -1;
int j = + - +1;
int z = ~~2;
boolean b = !!true;
boolean c = !!!true;

// These are better:
int i = 1;
int j = -1;
int z = 2;
boolean b = true;
boolean c = false;

// And these just make your brain hurt:
int i = ~-2;
int j = -~7;
            ]]>
        </example>
	</rule>
	<rule name="AvoidBranchingStatementAsLastInLoop" since="5.0"
		class="net.sourceforge.pmd.lang.java.rule.basic.AvoidBranchingStatementAsLastInLoopRule"
		message="for문 안에서 비정상적 분기 종료 조건절을 피하라" externalInfoUrl="">
		<description>
            <![CDATA[
for문 안에서 비정상적 분기 종료 조건절을 피하라
            ]]>
        </description>
		<priority>2</priority>
		<example>
            <![CDATA[
  // unusual use of branching statement in a loop
for (int i = 0; i < 10; i++) {
	if (i*i <= 25) {
		continue;
	}
	break;
}

  // this makes more sense...
for (int i = 0; i < 10; i++) {
	if (i*i > 25) {
		break;
	}
}
            ]]>
        </example>
	</rule>

	<rule name="DontCallThreadRun" language="java" since="4.3"
		message="Thread.run()사용을 지양해라. Thread.start()사용 권장" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="Thread.run()사용을 지양해라. Thread.start()사용 권장">
		<description>
Thread.run()사용을 지양해라. Thread.start()사용 권장
      </description>
		<priority>4</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//StatementExpression/PrimaryExpression
[
    PrimaryPrefix
    [
        ./Name[ends-with(@Image, '.run') or @Image = 'run']
        and substring-before(Name/@Image, '.') =//VariableDeclarator/VariableDeclaratorId/@Image
        [../../../Type/ReferenceType[ClassOrInterfaceType/@Image = 'Thread']]
        or (
        ./AllocationExpression/ClassOrInterfaceType[@Image = 'Thread']
        and ../PrimarySuffix[@Image = 'run'])
    ]
]
]]>
         </value>
			</property>
		</properties>
		<example>
<![CDATA[
Thread t = new Thread();
t.run();            // use t.start() instead
new Thread().run(); // same violation
]]>
      </example>
	</rule>

	<rule name="DontUseFloatTypeForLoopIndices" language="java" since="4.3"
		message="Loop 증감 연산자로 floating point를 사용하지 말아라 반드시 사용해야 할 경우 double 을 사용해라"
		class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="Loop 증감 연산자로 floating point를 사용하지 말아라 반드시 사용해야 할 경우 double 을 사용해라">
		<description>
Loop 증감 연산자로 floating point를 사용하지 말아라 반드시 사용해야 할 경우 double 을 사용해라
    </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//ForStatement/ForInit/LocalVariableDeclaration
/Type/PrimitiveType[@Image="float"]
]]>
       </value>
			</property>
		</properties>
		<example>
<![CDATA[
public class Count {
  public static void main(String[] args) {
    final int START = 2000000000;
    int count = 0;
    for (float f = START; f < START + 50; f++)
      count++;
      //Prints 0 because (float) START == (float) (START + 50).
      System.out.println(count);
      //The termination test misbehaves due to floating point granularity.
    }
}
]]>
    </example>
	</rule>
	<rule name="CyclomaticComplexity" since="1.03"
		message="{0} ''{1}'' 은 {2}의 순환 복잡도를 보임니다."
		class="net.sourceforge.pmd.lang.java.rule.codesize.CyclomaticComplexityRule"
		externalInfoUrl="">
		<description>
   		<![CDATA[
높은 순환 복잡도(제어 흐름을 기초로 한 코드의 복잡도) 체크 Rule
(1-4 적음, 8-10 high, 11이상 매우 높은 복잡도 -> 10이상의 복잡도는 변경 필요)
		]]>
   </description>
		<priority>3</priority>
		<example>
<![CDATA[
public class Foo {		// This has a Cyclomatic Complexity = 12
1   public void example()  {
2       if (a == b)  {
3           if (a1 == b1) {
                fiddle();
4           } else if a2 == b2) {
                fiddle();
            }  else {
                fiddle();
            }
5       } else if (c == d) {
6           while (c == d) {
                fiddle();
            }
7        } else if (e == f) {
8           for (int n = 0; n < h; n++) {
                fiddle();
            }
        } else{
            switch (z) {
9               case 1:
                    fiddle();
                    break;
10              case 2:
                    fiddle();
                    break;
11              case 3:
                    fiddle();
                    break;
12              default:
                    fiddle();
                    break;
            }
        }
    }
}
]]>
   </example>
	</rule>
	<rule name="OnlyOneReturn" since="1.0"
		message="Method에서 여러 조건절에 따른 return이 있어도 잘못된 코딩으로 하나의 결과만 return 하는 오류를 피하라"
		class="net.sourceforge.pmd.lang.java.rule.controversial.OnlyOneReturnRule"
		externalInfoUrl="">
		<description>
Method에서 여러 조건절에 따른 return이 있어도 잘못된 코딩으로 하나의 결과만 return 하는 오류를 피하라
     </description>
		<priority>3</priority>
		<example>
 <![CDATA[
public class OneReturnOnly1 {
  public void foo(int x) {
    if (x > 0) {
      return "hey";   // first exit
    }
    return "hi";	// second exit
  }
}
 ]]>
     </example>
	</rule>
	<rule name="AvoidFinalLocalVariable" language="java" since="4.1"
		class="net.sourceforge.pmd.lang.rule.XPathRule" message="final 로컬 변수를 피하라"
		externalInfoUrl="${pmd.website.baseurl}/rules/java/controversial.html#AvoidFinalLocalVariable">
		<description><![CDATA[
final 로컬 변수를 피하라
         ]]></description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//LocalVariableDeclaration[
  @Final = 'true'
  and not(../../ForStatement)
  and
  (
    (count(VariableDeclarator/VariableInitializer) = 0)
    or
    (VariableDeclarator/VariableInitializer/Expression/PrimaryExpression/PrimaryPrefix/Literal)
  )
]
      ]]></value>
			</property>
		</properties>
		<example><![CDATA[
public class MyClass {
    public void foo() {
        final String finalLocalVariable;
    }
}
       ]]></example>
	</rule>
	<rule name="DoNotCallGarbageCollectionExplicitly" language="java"
		since="4.2" message="가비지 컬렉션을 명시적으로 실행하지 말아라" class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="${pmd.website.baseurl}/rules/java/controversial.html#DoNotCallGarbageCollectionExplicitly">
		<description>
          <![CDATA[
명시적으로 System.gc(), Runtime.getRuntime().gc(), System.runFinalization()의 사용을 지양해라. 최신 버전의 jvms에서 GC로 처리하는 것이 더 좋다
      ]]>
        </description>
		<priority>2</priority>
		<properties>
			<property name="xpath">
				<value>
                    <![CDATA[
//Name[
(starts-with(@Image, 'System.') and
(starts-with(@Image, 'System.gc') or
starts-with(@Image, 'System.runFinalization'))) or
(
starts-with(@Image,'Runtime.getRuntime') and
../../PrimarySuffix[ends-with(@Image,'gc')]
)
]
]]>
                </value>
			</property>
		</properties>
		<example>
            <![CDATA[
public class GCCall {
    public GCCall()	{
        // Explicit gc call !
        System.gc();
    }

    public void doSomething() {
    // Explicit gc call !
       Runtime.getRuntime().gc();
    }

    public explicitGCcall() { // Explicit gc call ! System.gc(); }

    public void doSomething() { // Explicit gc call ! Runtime.getRuntime().gc(); }
}
      ]]>
    </example>
	</rule>
	<rule name="SimplifyBooleanReturns" since="0.9"
		message="불필요한 Boolean Return을 하지 말아라"
		class="net.sourceforge.pmd.lang.java.rule.design.SimplifyBooleanReturnsRule"
		externalInfoUrl="">
		<description>
불필요한 Boolean Return을 하지 말아라
    </description>
		<priority>3</priority>
		<example>
<![CDATA[
public boolean isBarEqualTo(int x) {

	if (bar == x) {		 // this bit of code...
		return true;
	} else {
		return false;
    }
}

public boolean isBarEqualTo(int x) {

   	return bar == x;	// can be replaced with this
}
]]>
    </example>
	</rule>
	<rule name="DefaultLabelNotLastInSwitchStmt" language="java"
		since="1.5" message="Default 라벨은 Switch 문에 마지막에 위치해야 한다." class="net.sourceforge.pmd.lang.rule.XPathRule"
		externalInfoUrl="">
		<description>
Default 라벨이 마지막에 위치하지 않음
       </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//SwitchStatement
 [not(SwitchLabel[position() = last()][@Default='true'])]
 [SwitchLabel[@Default='true']]
]]>
                 </value>
			</property>
		</properties>
		<example>
   <![CDATA[
public class Foo {
  void bar(int a) {
   switch (a) {
    case 1:  // do something
       break;
    default:  // the default case should be last, by convention
       break;
    case 2:
       break;
   }
  }
}   ]]>
       </example>
	</rule>
	<rule name="CloseResource" since="1.2.2"
		message="{0} object과 같은  resources 사용 후 close 되지 않음" class="net.sourceforge.pmd.lang.java.rule.design.CloseResourceRule"
		externalInfoUrl="">
		<description>
    Connection, Statement, and ResultSet와 같은 객체는 사용후 반드시 close 시켜야 한다.
    </description>
		<priority>3</priority>
		<example>
<![CDATA[
public class Bar {
  public void foo() {
    Connection c = pool.getConnection();
    try {
      // do stuff
    } catch (SQLException ex) {
     // handle exception
    } finally {
      // oops, should close the connection using 'close'!
      // c.close();
    }
  }
}
]]>
    </example>
	</rule>
</ruleset>
